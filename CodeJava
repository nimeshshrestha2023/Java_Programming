// 1. Program in Java to display "Hello, World !" in the console.

Code: 

class Learn {
    public static void main(String[] args) {
        System.out.println("Hello, World !");
    }
} 

// 2. Program in Java to display the sum of two integers.

Code:
class Learn{
    public static void main(String[] args){
        int num1 = 5;
        int num2 = 4;
        
        System.out.println("Sum between " + num1 + "and" + num2 + "is" + (num1+num2));
    } 
}

// 3. Program in Java to name , roll, and age from the user and display accordingly.

Code:
import java.util.Scanner;

class Learn{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        
        System.out.println("Enter name: ");
        String name = sc.nextLine();
        System.out.println("Enter the age: ");
        int age = sc.nextInt();
        System.out.println("Enter the roll: ");
        int roll = sc.nextInt();
        
        System.out.println("---Displaying the output---");
        System.out.println("Name: " +name + " |Age: " +age + "|Roll: " +roll);
    }
}

// 4. Program to take two integers and find the sum between them.

Code:
import java.util.Scanner;

class Learn{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        
        int num1, num2;
        System.out.println("Enter two numbers: ");
        num1 = sc.nextInt();
        num2 = sc.nextInt();
        System.out.println("Sum between "+num1 + " and " +num2 + " is " +(num1+num2));
    }
}

// Program in Java to take 'n' integers and store it in an array and display too.

Code:

import java.util.Scanner;

class Learn{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int i,limit;
        System.out.println("How many numbers?");
        limit = sc.nextInt();

        System.out.println("Enter "+limit+" numbers: ");
        int[] num = new int[limit];
        for(i=0;i<limit;i++)
        {
            System.out.println("Number: "+(i+1));
            num[i] = sc.nextInt();
        }
        int max = num[0];
        for(i=1;i<limit;i++)
        {
            if(num[i] > max)
            {
                max = num[i];
            }
        }
        System.out.println("The largest number is: "+max);
        System.out.println("Second largest number is "+num[limit-2]);        

    }
}
// Program in java to develop the menu-based program using switch case :
   1.Convert the binary to decimal
   2.Convert the decimal to binary
   3.Armstrong number or not

Code:

import java.util.Scanner;

class Sample {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("---1. Convert the binary to decimal---");
        System.out.println("---2. Convert the decimal to binary---");
        System.out.println("---3. Armstrong number---");
        System.out.println("---Your choice(1-3): ");
        int choice = sc.nextInt();

        switch (choice) {

            case 1: {
                int r, c, s = 0, p = 0;
                System.out.println("Enter the binary number:");
                int num = sc.nextInt();
                c = num;
                while (num > 0) {
                    r = num % 10;
                    s = s + r * (int) Math.pow(2, p);
                    num = num / 10;
                    p++;
                }
                System.out.println("Decimal number is: " + s);
                break;
            }

            case 2: {
                System.out.println("Enter the decimal value: ");
                int num = sc.nextInt();
                int r, c;
                String s = "";
                c = num;
                while (num > 0) {
                    r = num % 2;
                    num = num / 2;
                    s = r + s;

                }
                System.out.println("Decimal is " + s);
                break;
            }

            case 3: {
                System.out.println("Enter the number: ");
                int num = sc.nextInt();
                int c = num;
                int temp = num;
                int cout = 0, r;
                int s = 0;
                while (temp > 0) {
                    temp = temp / 10;
                    cout++;
                }
                temp = num;
                while (temp > 0) {
                    r = temp % 10;
                    s = s + (int) Math.pow(r, cout);
                    temp = temp / 10;
                }
                if (c == s) {
                    System.out.println(c+" is armstrong");
                } else {
                    System.out.println(c+" is not armstrong");
                }
                break;
            }
            default:
                System.out.println("Invalid choice");

        }

    }
}

// Program in Java to sort the integers in an array .
import java.util.Scanner;

class Learn{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("How many number?");
        int limit = sc.nextInt();
        int[] num = new int[limit];
        System.out.println("Enter "+limit+" numbers: ");
        for(int i=0;i<num.length;i++)
        {
            System.out.println("Number: "+(i+1));
            num[i] = sc.nextInt();

        }
        for(int i=0;i<num.length;i++)
        {
            for(int j=i+1;j<num.length;j++)
            {
                if(num[i] > num[j])
                {
                    int temp = num[i];
                    num[i] = num[j];
                    num[j] = temp;
                }
            }
        }
        System.out.println("---Sorted Array---");
        for(int i=0;i<num.length;i++)
        {
            System.out.print(num[i]+" ");
        }
    }
}

// Program in Java that takes matrix elements of n size array and find the sum of each diagonals.

Code:
import java.util.Scanner;

class Learn{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Size of matrix?");
        int size = sc.nextInt();
        System.out.println("Enter matrix elements: ");
        int[][] num = new int[size][size];
        for(int i=0;i<size;i++)
        {
            for(int j=0;j<size;j++)
            {
                num[i][j] = sc.nextInt();
            }
        }
        System.out.println("---Matrix formed---");
        for(int i=0;i<size;i++)
        {
            for(int j=0;j<size;j++)
            {
                System.out.print(num[i][j] +"\t");
            }
            System.out.println();
        }
        int leftSum = 0, rightSum = 0;
        for(int i=0;i<size;i++)
        {
            for(int j=0;j<size;j++)
            {
                if(i==j)
                {
                    leftSum += num[i][j];

                }
                if(i+j == size - 1)
                {
                    rightSum += num[i][j];
                }
            }
        }
        System.out.println("Sum of left diagonal elements: " + leftSum);
        System.out.println("Sum of right diagonal elements: " + rightSum);

    }
}

// Program in Java to take string value and print only the special characters (not alphabets).
import java.util.Scanner;

class Learn{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the string: ");
        String s = sc.nextLine();
        for(int i=0;i<s.length();i++)
        {
            char ch = s.charAt(i);

            if(!((ch>='A' && ch<='Z') || (ch>='a' && ch<='z')))
            {
                System.out.println(ch);
            }

        }
    }
}

// Program in Java that takes 2D Array of characters and store 'n' characters.

Code:
import java.util.Scanner;

public class Char2DArray {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Getting dimensions of the 2D array
        System.out.print("Enter number of rows: ");
        int rows = scanner.nextInt();
        System.out.print("Enter number of columns: ");
        int cols = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        char[][] charArray = new char[rows][cols];

        // Filling the array with characters
        System.out.println("Enter " + (rows * cols) + " characters:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                charArray[i][j] = scanner.next().charAt(0);
            }
        }

        // Displaying the stored characters
        System.out.println("Stored 2D character array:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                System.out.print(charArray[i][j] + " ");
            }
            System.out.println();
        }

        scanner.close();
    }
}

// Program  in Java to display armstrong numbers from m to n.

Code:
import java.util.Scanner;

class ArmstrongRange {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the lower limit (m): ");
        int m = sc.nextInt();
        System.out.println("Enter the upper limit (n): ");
        int n = sc.nextInt();

        System.out.println("Armstrong numbers between " + m + " and " + n + ":");
        
        for (int num = m; num <= n; num++) {
            int temp = num, sum = 0, count = 0;

            // Count the number of digits
            int c=num;
            while (temp > 0) {
                temp /= 10;
                count++;
            }

            temp = num; // Reset temp for the calculation
            while (temp > 0) {
                int r = temp % 10;
                sum += Math.pow(r, count);
                temp /= 10;
            }

            if (sum == num) {
                System.out.println(num);
            }
        }
    }
}

/* Create a class TwoDpoint with x and y variables to represent two dimensional coordinate point. Create two instances of TwoDpoint class. Then, find the distance between these two instances. Also get the mid - point as a TwoDpoint type. */
import java.util.Scanner;

class TwoDpoint{
    double x ,y;
}

class Run{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        TwoDpoint p1 = new TwoDpoint();
        TwoDpoint p2 = new TwoDpoint();
        System.out.println("Enter the x & y for p1: ");
        p1.x = sc.nextDouble();
        p1.y = sc.nextDouble();
        System.out.println("Enter the x & y for p2: ");
        p2.x = sc.nextDouble();
        p2.y = sc.nextDouble();
        double distance = Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y,2));
        System.out.println("The distance between p1 & p2 is: "+distance);
        TwoDpoint midpoint = new TwoDpoint();
        midpoint.x = (p1.x + p2.x)/2;
        midpoint.y = (p1.y + p2.y)/2;
        System.out.println("Midpoint is("+midpoint.x+","+midpoint.y+")");   
        
    }
}

/* Create a class member with these integers instances variables x ,y , & z. The class has getMax()method that will return
the largest number. Create a class NumberDemo with main method that will create an object of Number & will print the largest number. */

Code:
import java.util.Scanner;

class Number {
    int x , y,z;
    int getMax(){
        int max = x;
        if(y > max)
        {
            max = y;
        }
        if(z > max)
        {
            max = z;
        }
        return max;
    }

}
class NumberDemo{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Number n = new Number();
        System.out.println("Enter the first number");
        n.x = sc.nextInt();
        System.out.println("Enter the second number");
        n.y = sc.nextInt();
        System.out.println("Enter the third number");
        n.z = sc.nextInt();
        System.out.println("The maximum number is " + n.getMax());
        
    }
}

/*Student Grade Evaluator Write a Student class with attributes name, rollNo, and marks (an array of 5 subjects).
Add a method to calculate the average and determine the grade based on the average. */

Code:


import java.util.Scanner;

class Student {
    String name;
    int rollNo;
    int[] marks = new int[5];
    String grade;

    double calculate() {
        int sum = 0;
        for (int i=0;i<marks.length;i++) {
            sum += marks[i];
        }
        return (double) sum / marks.length;
    }

    void assignGrade(double avg) {
        if (avg >= 90) {
            grade = "A";
        } else if (avg >= 80) {
            grade = "B";
        } else if (avg >= 70) {
            grade = "C";
        } else if (avg >= 60) {
            grade = "D";
        } else {
            grade = "F";
        }
    }

    void displayInfo() {
        System.out.println("\nStudent Details:");
        System.out.println("Name: " + name);
        System.out.println("Roll No: " + rollNo);
        System.out.println("Average Marks: " + calculate());
        System.out.println("Grade: " + grade);
    }
}

public class Run {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Student s = new Student();

        System.out.print("Enter the name of the student: ");
        s.name = sc.nextLine();

        System.out.print("Enter the roll number: ");
        s.rollNo = sc.nextInt();

        System.out.println("Enter the marks of 5 subjects:");
        for (int i = 0; i < s.marks.length; i++) {
            System.out.print("Subject " + (i + 1) + ": ");
            s.marks[i] = sc.nextInt();
        }

        double avg = s.calculate();
        s.assignGrade(avg);
        s.displayInfo();
    }
}

-------------------------------------------------------------------------------------------------------------------------------------------------

// Program to input name , roll and marks in three sunjects and store it in obj;

import java.util.Scanner;

class Student{
    static String name;
    static int roll;
    static int[] marks = new int[3];
    static String grade;

    int getSum(){
        int sum = 0;
        for(int i=0;i<marks.length;i++)
        {

            sum += marks[i];
        }
        return sum;
    }
    String getGrade(){
        int sum = getSum();
        if(sum >=90) grade = "A";
        else if(sum >= 80) grade = "B";
        else if(sum >= 70) grade = "C";
        else grade = "F";
        return grade;
    }

        void display(){
            System.out.println("Name: "+name);
            System.out.println("ROll: "+roll);
            System.out.println("Total marks: "+getSum());
            System.out.println("Grade: "+getGrade());
        }
}
class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Student s = new Student();
        System.out.println("Enter name: ");
        Student.name = sc.nextLine();
        System.out.println("Enter roll: ");
        s.roll = sc.nextInt();
        System.out.println("Marks in 3 subject: ");
        for(int i=0;i<Student.marks.length;i++)
        {
            s.marks[i] =sc.nextInt();
        }
        s.display();

    }
}

/*Odd/Even Counter Create a class that takes an array of integers as input and has methods to count how many are even and how many are odd. */

import java.util.Scanner;

class Check{
    Scanner sc = new Scanner(System.in);
    int even;
    int odd;
    int[] num;
    Check(){
        System.out.println("Enter the size of array");
        int n = sc.nextInt();
        num = new int[n];
        for(int i=0;i<num.length;i++)
        {
            num[i] = sc.nextInt();
        }
    }
    int CountEven(){
        int ce = 0;
        for(int i=0;i<num.length;i++)
        {
            if(num[i] % 2==0)
            {
                ce++;
            }
        }
        return ce;
    }
    int CountOdd(){
        int co = 0;
        for(int i=0;i<num.length;i++)
        {
            if(num[i] % 2!=0)
            {
                co++;
            }
        }
        return co;
}
}
class Run{
    public static void main(String[] args) {
        Check c = new Check();
        c.even = c.CountEven();
        c.odd = c.CountOdd();
        System.out.println("Even numbers: "+c.even);
        System.out.println("Odd numbers: "+c.odd);

    }
}

/* Create a class currency with member variables rupees and paisa(both integers). Create two instances of currency ,  
Add two currency object in such a way that when paisa is greater then 99 the rs should be incremented by 1 and paisa should be decremented by 100.
The result of addition should be stored in another currency object. */

class Currency {
    int rupees;
    int paisa;

    Currency(int r, int p) {
        rupees = r;
        paisa = p;

        if (paisa >= 100) {
            rupees += paisa / 100;
            paisa = paisa % 100;
        }
    }

    void display() {
        System.out.println(rupees + " Rupees and " + paisa + " Paisa");
    }
}

public class Main {
    public static void main(String[] args) {
        Currency c1 = new Currency(10, 80);
        Currency c2 = new Currency(5, 50);

        int totalRupees = c1.rupees + c2.rupees;
        int totalPaisa = c1.paisa + c2.paisa;

        Currency result = new Currency(totalRupees, totalPaisa);

        System.out.print("Sum = ");
        result.display();
    }
}

/*Create a class Book with instances variables : author  title and price , create an  array of book type to store 
10 books instances , finally print information of the book object which price is the highest in the array. 
 */
import java.util.Scanner;

class Book{
    String author;
    String title;
    int price;
    Book(String author, String title, int price)
    {
        this.author  = author;
        this.title = title;
        this.price = price;
    }
    void display()
    {
        System.out.println("Author of the book: " +author);
        System.out.println("Title of the book: "+title);
        System.out.println("Price of the book: "+price);
    }
}
class Books{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Book[] books = new Book[10];
        System.out.println("Enter 10 different book's author, title and price: ");
        for(int i=0;i<books.length;i++)
        {
            System.out.println("Enter book's author: ");
            String author = sc.nextLine();
            System.out.println("Enter book's title: ");
            String title = sc.nextLine();
            System.out.println("Enter book's price: ");
            int price = sc.nextInt();          
            books[i] = new Book(author, title, price);
        }
        Book max = books[0];
        for(int i=0;i<books.length;i++)
        {
            if(books[i].price > max.price)
            {
                max = books[i];
            }
        }
        System.out.println("---Most expensive book---");
        max.display();

    }
}

// Create a class Rectangle with member variables length and breadth (both double type). Create three instances of retangle and print
area and perimeter of that rectangle instances whose length is greatest. Create member method as required.

Code: 
import java.util.Scanner;

class Rectangle{
    double length, breadth;
    Rectangle(double l, double b)
    {
        length = l;
        breadth = b;
    }
    double area(){
        return length * breadth;

    }
    double peri(){
        return 2*(length + breadth);
    }

}
class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter length and breadth for obj 1: ");
        double l1 = sc.nextDouble();
        double b1 = sc.nextDouble();
        Rectangle r1 = new Rectangle(l1, b1);

        System.out.println("Enter length and breadth for obj2: ");
        double l2 = sc.nextDouble();
        double b2 = sc.nextDouble();
        Rectangle r2 = new Rectangle(l2, b2);

        System.out.println("Enter length and breadth for obj3: ");
        double l3 = sc.nextDouble();
        double b3 = sc.nextDouble();
        Rectangle r3 = new Rectangle(l3, b3);

        Rectangle max = r1;
        if(r2.length > max.length)
        {
            max = r2;
        }
        if(r3.length > max.length)
        {
        max = r3;
        }
        System.out.println("Area: "+max.area());
        System.out.println("Perimeter: "+max.peri());
        


    }
}
// Program in java to print the number from 1 to n using recursion.

Code:

import java.util.Scanner;

class Main{
    public static void print(int count)
    {
        if(count == 0) return;
        print(count - 1);
        System.out.println(count);
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the limit: ");
        int limit = sc.nextInt();
        
        print(limit);
    }
}

// Program in Java to find the factorial of a number using recursive.

import java.util.Scanner;

class Recursion{
    static int fact(int num)
    {
        if(num==0 || num==1)
        {
            return 1;
        }
        else{
            return num*fact(num-1);
        }
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number: ");
        int num = sc.nextInt();
        System.out.println("The factorial of "+num+" is "+fact(num));
    }
}

// Program in Java to print the fibonacci series upto 'n' terms.
Code:

class Demo{
    public static int fibo(int n){
        if(n==1)
        return 0;
        else if(n==2)
        return 1;
        else
        return fibo(n-1)+fibo(n-2);
    }
    public static void main(String[] args){
        for(int i=1;i<=10;i++)
        {
            System.out.print(fibo(i)+" ");
        }
    }
}

// Program in Java to find the factorial of the number using recursive number.

Code:
class Main{
    public static int fact(int num){
        if(num<=1)
        return 1;
        else
        return num*fact(num-1);
    }
    public static void main(String[] args){
        System.out.println("The factorial is "+fact(4));
    }
}

// Program in Java to find the sum of n natural numbers using recursive method.

Code:

import java.util.Scanner;

class Main{
    public static int fact(int num)
    {
        if(num<=1)
        return 1;
        else
        return num+fact(num-1);
    }
    public static int  getVal()
    {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter number: ");
       int  n = sc.nextInt();
        return n;
    }
    public  static void display(int n)
    {
         System.out.println("Sum of "+n+ " number is "+fact(n));
    }
    public static void main(String[] args){
        
       int n = getVal();
       display(n);
     
    }
}


// Program in Java to find the power of the given number using recursion.

Code:

import java.util.Scanner;

class Main{
    public static int power(int base, int expo)
    {
        if(expo == 0)
        return 1;
        else
        return base*power(base,expo-1);
    }
      public static void getVal()
    {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter base and exponent: ");
        int base = sc.nextInt();
        int expo = sc.nextInt();
        int result = power(base,expo);
        System.out.println(base+" raised to the power "+expo+" expo is "+result);
        
    }
    public static void main(String[] args){
        getVal();
        
    }
}

// Example of Garbage collector

class Gcollector{
    Gcollector(){
        System.out.println("New object created !");
    }
    protected void finalize(){
        System.out.println("Objject is destroyed!");
    }
    
}
class Main{
    public static void main(String[] args) {
        Gcollector obj = new Gcollector();
        obj = null; // By null reference
        Gcollector obj2 = new Gcollector();
        Gcollector obj3 = new Gcollector();
        obj2 = obj3; // By assigning refernce to another

        new Gcollector(); // By anonymous creation
        System.gc();

    }
}


// Switch case:
Code:

import java.util.Scanner;

class Main{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("1. Check palindrome");
        System.out.println("2. Check armstrong: ");
        System.out.println("Binary to decimal");
        System.out.println("Decimal to binary: ");
        int choice = sc.nextInt();

        switch(choice)
        {
            case 1:{
            System.out.println("Enter the number: ");
            int num = sc.nextInt();
            int r, c , s=0;
            c = num;
            while(num > 0)
            {
                r = num % 10;
                s = s*10 + r;
                num/=10;
            }
            if(c==s)
            {
                System.out.println("Palindrome");
            }
            else
            {
                System.out.println("Not palindrome");
            }
            break;
        }

            case 2:{
            System.out.println("Enter the number: ");
            int num = sc.nextInt();
            int c = num;
            int temp = num;
            int r, s=0, count = 0;
            while(temp> 0)
            {
                r = num % 10;
                count++;
            }
            temp = num;
            while(temp > 0)
            {
                r = temp % 10;
                s = s + (int)Math.pow(r, count);
                temp /= 10;
            }
            if(c==s)
            {
                System.out.println("Armstrong");
            }
            else
            System.out.println("Not");
            break;
            }

            case 3:{
                System.out.println("Enter the binary: ");
                int num = sc.nextInt();
                int r, c ,s=0, p = 0;
                c = num;
                while(num > 0)
                {
                     r = num % 10;
                     s = s+r*(int)Math.pow(2,p);
                     num = num/10;
                     p++;
                }
                System.out.println("Decimal is "+s);
                break;
            }

            case 4:{
                System.out.println("Enter the decimal : ");
                int num = sc.nextInt();
                int r , c;
                String s = "";
                c=  num;
                while(num > 0)
                {
                    r = num % 2;
                    num /= 2;
                    s += r;
                }
                System.out.println("Binary is "+s);
                break;

            }
            default: {
            System.out.println("Invalid choice");
            }

        }
    }
}

// Program to demonstrate the paramaterized and non parameterized constructor

code:
class Demo{
    int value;
    String name;

    //Non paramaterized constructor 
    Demo()
    {
        this.value = 0;
        this.name = "No name";
        System.out.println("Non paramaterized constructor called !!");
    }
    //Paramaterized constructor
    Demo(int value, String name)
    {
        this.value =value;
        this.name = name;
        System.out.println("Paramaterized constructor called!");
    }
    public static void main(String[] args) {
        Demo d1 = new Demo();
        System.out.println("For non-paramaterized constructor, value is "+d1.value + " and name for it is "+d1.name);
        Demo d2 = new Demo(1,"Nimesh");
        System.out.println("For paramaterized constuctor , value is "+d2.value+"and name is "+d2.name);
    }
}

// Examples of Super keyword:

Code:
class Worker{
    int wages = 10000;
}
class Picker extends Worker{
    int wages = 5000;
    int bonus = 1000;

    void displayDetail(){
        System.out.println("Picker wages is "+wages);
        System.out.println("Worker wages is "+super.wages);
        System.out.println("Picker's bonus is "+bonus);
    }
    public static void main(String[] args) {
        Picker p = new Picker();
        p.displayDetail();
    }
}

// Order of inheritance

class A{
    A()
    {
        System.out.println("Grand Parents");
    }
}
class B extends A{
    B()
    {
        System.out.println("Parent class");
    }
}

class C extends B{
    C()
    {
        System.out.println("Child class");
    }
}
class Demo{
    public static void main(String[] args) {
        C obj = new C();
        
    }
}


// Reverse the string using StringBuilder() or StringBuffer()

Code:

class Main{
    public static void main(String[] args)
    {
        //Using StringBuilder
        StringBuilder str = new StringBuilder("Nimesh");
        System.out.println(str.reverse());
        
        //Using StringBuffer
        StringBuffer str1= new StringBuffer("Shrestha");
        System.out.println(str1.reverse());
    }
}

-----------------------------------------------------------------------------------------------
Logically,

class Main{
    public static void main(String[] args)
    {
        String str = "Nimesh Shrestha";
        String str1 = "";
        int l,i;
        
        l = str.length();
        for(i=l-1;i>=0;i--)
        {
            str1 = str1+str.charAt(i);
        }
        System.out.println(str1);
    }
}

// Multiple catch block sample:

Code:

class Main{
    public static void main(String[] args)
    {
        try{
            int arr[] = new int[5];
            System.out.println(arr[10]);
        }
        catch(ArithmeticException e)
        {
            System.out.println("Arithmetic Exception occurs: ");
        }
        catch(ArrayIndexOutOfBoundsException e)
        {
            System.out.println("ArrayIndexOutOfBoundsException occurs");
        }
        catch(Exception e)
        
        {
            System.out.println("Parent exception occurs");
        }
        System.out.println("Rest of the code");
    }
}

// Java Custom exception sample:

Code:

class InvalidAgeException extends Exception{
    InvalidAgeException(String msg)
    {
        super(msg);
    }
}
class Main{
    public static void main(String[] args) {
        try{
            vote(12);
        }
        catch(Exception e)
        {
            System.out.println("Exception caught: "+e.getMessage());
        }
    }
    public static void vote(int age) throws InvalidAgeException{
        if(age<18)
        throw new InvalidAgeException("Access denied");
        else
        System.out.println("Access granted");
    }

}

// Sample of ArithmeticException 

Code:

class Main{
    public static void main(String[] args)
    {
        try{
            int x = 10/0;
            System.out.println(x);
        }catch(ArithmeticException e)
        {
            System.out.println(e);
        }
        System.out.println("Yoooo!, you can see this");
    }
}

// Sample of NullPointerException 

Code:

class Main{
    public static void main(String[] args)
    {
        try{
            String str = null;
            System.out.println(str.length());
        }catch(NullPointerException e)
        {
            System.out.println(e);
        }
        System.out.println("Yoooo!, you can see this");
    }
}

//Sample of ArrayIndexOutOfBoundsException 

Code:
class Main{
    public static void main(String[] args)
    {
        try{
           int arr[] = new int[5];
           System.out.println(arr[10]);
        }catch(ArrayIndexOutOfBoundsException e)
        {
            System.out.println(e);
        }
        System.out.println("Yoooo!, you can see this");
    }
}


// Sample of finally keyword

Code:

class Main{
    public static void main(String[] args)
    {
        try{
            int x = 22/2;
            System.out.println(x);
        }
        catch(NullPointerException e)
        {
            System.out.println(e);
        }
        finally{
            System.out.println("I am always executed !");
        }
    }
}


// Sample of throw keyword:

Code:

class Main{
    public static void main(String[]args)
    {
        int age = 13;
        if(age<18)
        {
            throw new ArithmeticException("Denied");
        }
        else{
            System.out.println("Granted");
        }
        System.out.println("Yoo !, I won't executed if thrown");
    }
}

// Handle exception using throws keyword:

Code:

class Main{
    public static void main(String[] args) throws InterruptedException
    {
        for(int i=1;i<=10;i++)
        {
            System.out.println(i);
            Thread.sleep(1000);
        }
    }
}


// Math class in java

Code:
class Main{
    public static void main(String[] args) {
        System.out.println(Math.pow(2,3));
        System.out.println(Math.sqrt(81));
        System.out.println(Math.cbrt(27));
        System.out.println(Math.max(23, 22));
        System.out.println(Math.min(23, 26));
        System.out.println(Math.abs(-5));
        System.out.println(Math.floor(2.4));
        System.out.println(Math.ceil(2.4));
        System.out.println(Math.sin(3.1415/2));
        System.out.println(Math.sin(Math.toRadians(90)));
        System.out.println(Math.random()*9);
    }
}

// Call by value 

Code:

class Main {
    static void test(int a) {
        a = a+50;
        System.out.println("Inside method: "+a);
    }

    public static void main(String[] args) {
        int a = 10;
        System.out.println("Before call: "+a);
        test(a);
        System.out.println("Value of a after method call: " + a); // Still 10
    }
}

// Working with BigNumber and BigDecimal values:

Code:

import java.math.BigInteger;
import java.math.BigDecimal;

class Main{
    public static void main(String[] args)
    {
        BigInteger num1 = new BigInteger("123232334335345454465656565343434343332323232");
        BigInteger num2=  new BigInteger("232322434345454544544545454545454545455454545");
        BigDecimal d1 = new BigDecimal("12323232323323232323232323232323.344545545455");
        BigDecimal d2 = new BigDecimal("1223232323232434556565343434343.54545454545455");
        
        
        
        BigInteger sum = num1.add(num2);
        BigInteger sub  = num1.subtract(num2);
        BigInteger mul = num1.multiply(num2);
        BigInteger div = num1.divide(num2);
        BigInteger power = num1.pow(2);
        System.out.println(sum);
        System.out.println(sub);
        System.out.println(mul);
        System.out.println(div);
        System.out.println(power);
        
        BigDecimal dsum = d1.add(d2);
        System.out.println(dsum);
        
        /*
        ..
        .....
        ....
        
        */
    }
}

//Write a program to create a class Mobile (type, Phone_no). Customize the exception such that if the user give phone_no having 
less than or greater than 10 digit, then the program has to throw an exception with the message “Invalid Phone number”. [BIM – 2023 TU]

Code:
class InvalidPhoneNumberException extends Exception{
    InvalidPhoneNumberException(String msg)
    {
        super(msg);
    }
}
class Main{
    public static void main(String[] args)
    {
        try{
            Mobile m = new Mobile("Smartphone","9812345678");
            m.show();
        }catch(Exception e)
        {
            System.out.println("Exception caught: "+e.getMessage());
        }
    }
    
}
class Mobile{
    String type;
    String phoneno;
    Mobile(String type, String phoneno) throws InvalidPhoneNumberException
    {
        if(phoneno.length() != 10)
        {
            throw new InvalidPhoneNumberException("Invalid Phone number");
            
        }
        this.type = type;
        this.phoneno = phoneno;
    }
    void show()
    {
        System.out.println("Type is "+type);
        System.out.println("Phone no: "+phoneno);
    }
}

// WAP to show string constructor.

Code:

class Main {
    public static void main(String[] args) {
        // 1. Empty String constructor
        String s1 = new String();
        System.out.println("Empty String: '" + s1 + "'");

        // 2. String from another String
        String s2 = new String("Hello World");
        System.out.println("String from another string: " + s2);

        // 3. String from character array
        char[] charArray = { 'J', 'a', 'v', 'a' };
        String s3 = new String(charArray);
        System.out.println("String from char array: " + s3);

        // 4. String from byte array
        byte[] byteArray = { 65, 66, 67, 68 }; // ASCII values for A, B, C, D
        String s4 = new String(byteArray);
        System.out.println("String from byte array: " + s4);

        // 5. String from part of char array
        String s5 = new String(charArray, 1, 2); // "av"
        System.out.println("String from part of char array: " + s5);
    }
}


// WAP in java to make an array of size 30 , store 30 integers then display integers that are between 16 and 47.

Code:

import java.util.Scanner;

class Main{
    public static void main(String[] args)
    {
        Scanner sc =new Scanner(System.in);
        System.out.println("Enter 3 number: ");
        int[] num = new int[3];
        for(int i=0;i<3;i++)
        {
            num[i] = sc.nextInt();
        }
        System.out.println("Numbers between 16-47: ");
        for(int i=0;i<3;i++)
        {
            if(num[i] > 16 && num[i] < 47)
            {
                System.out.println(num[i]+" ");
            }
        }
    }
}



/*Write a program that asks the user to enter numbers in an array of size ‘n’. Then displays
only the numbers that are divisible by 2 and 3. */

import java.util.Scanner;

class Main{
    public static void main(String[] args)
    {
        Scanner sc =new Scanner(System.in);
        System.out.println("Enter the size of an array :");
        int n = sc.nextInt();
        int[] num = new int[n];
        System.out.println("Enter "+n+" numbers: ");
        for(int i=0;i<n;i++)
        {
            num[i] = sc.nextInt();
        }
        System.out.println("Numbers divisible by 2 and 3: ");
        for(int i=0;i<n;i++)
        {
            if((num[i]%2==0) && (num[i]%3==0))
            {
                
                System.out.print(num[i]+" ");
            }
        }
    }
}

/*Write a program that asks the user to enter elements in a matrix of size m × n and then
display the sum of elements. */

import java.util.Scanner;

class Main{
    public static void main(String[] args)
    {
        Scanner sc =new Scanner(System.in);
        System.out.println("Enter the row : ");
        int m = sc.nextInt();
        System.out.println("Enter the column: ");
        int n = sc.nextInt();
        int[][] arr = new int[m][n];
        System.out.println("Enter the "+m+"x"+n+" size matrix elements:" );
        int sum = 0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                arr[i][j] = sc.nextInt();
            
            }
        }
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                sum += arr[i][j];
            }
        }
        System.out.println("Sum of "+m+"x"+n+" array: "+sum);
        }
}

 /*Create a class Number with three integer instance variables x, y and z. The class will have
one constructor to initialize instance variables. The class also will contain method
getMax() method that will return the largest number. Create a class NumberDemo with
main method that will create an object of Number and will print the largest number. */
 
 class Number{
    int x ,y, z;
    Number(int a, int b, int c)
    {
        x =a;
        y=b;
        z=c;
    }
    int getMax()
    {
        int max=x;
        if(y > max)
        {
            max =  y;
        }
        if(z > max)
        {
            max = z;
        }
        return max;
    }
}
public class Main{
    public static void main(String[] args)
    {
        Number n = new Number(1,2,3);
        System.out.println(n.getMax());
    }
}

// Program to demonstrate the String constructor.

class Main{
    public static void main(String[] args)
    {
        //1. Empty string constructor
        String str1 = new String();
        System.out.println("Empty constructor: "+str1);
        
        //2. String from another string
        
        String str2 = new String("Nimesh");
        System.out.println("String from another string: "+str2);
        
        //3. String from character Array
        char[] chararray = {'J','A','V','A'};
        String str3 = new String(chararray);
        System.out.println("String from character array: "+str3);
        
        //4. String from bytearray
        byte[] bytearray = {65,66,67,68};
        String str4 = new String(bytearray);
        System.out.println("String from byte array: "+str4);
        
        //5. String from part of char array
        
        String str5 = new String(chararray,1,2);
        System.out.println("String from part of chararray: "+str5);
        
        
    }
}


// WAP to show the demo of concat()

Code:

class Main{
    public static void main(String[] args)
    {
        String str1 = "Nimesh";
        String str2 = "Shrestha";
        
        String str3 = str1.concat(str2);
        System.out.println("Result: "+str3);
    }
}








